from aiogram import Router, F
from aiogram.types import Message
import app.keyboard as kb
import sqlite3

router = Router()
conn = sqlite3.connect("Note.db")
cursor = conn.cursor()

@router.message(F.text == "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –∑–∞–º–µ—Ç–∫–∏")
async def view_note(message: Message):
    user_id = message.from_user.id  # –ü–æ–ª—É—á–∞–µ–º ID —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    cursor.execute("SELECT id, title, description, is_remind, remind_at FROM Note WHERE user_id = ?", (user_id,))
    notes = cursor.fetchall()

    if notes:
        for note in notes:
            note_id, title, description, is_remind, remind_at = note
            remind_text = f"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: {'–¥–∞' if is_remind else '–Ω–µ—Ç'}"
            remind_at_text = f"–í—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: {remind_at}" if remind_at else "–í—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
            note_text = f"üìå –ù–∞–∑–≤–∞–Ω–∏–µ: {title}\n–û–ø–∏—Å–∞–Ω–∏–µ: {description}\n{remind_text}\n{remind_at_text}"
            await message.answer(note_text, reply_markup=kb.get_note_inline_keyboard(note_id))
    else:
        await message.answer("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–º–µ—Ç–æ–∫.", reply_markup=kb.keyboard_reply)
